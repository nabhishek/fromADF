{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "7b68d2b5-dfbe-46e1-938f-98ed143b7953"
		},
		"integrationRuntime_IRForCopyDataTool": {
			"type": "string",
			"metadata": "Integration Runtime Name",
			"defaultValue": "IRForCopyDataTool"
		},
		"integrationRuntime_ssis-ir": {
			"type": "string",
			"metadata": "Integration Runtime Name",
			"defaultValue": "ssis-ir"
		},
		"ADLS_Gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_Gen2'"
		},
		"AzureDataLakeGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeGen2'"
		},
		"AzureSqlDW1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW1'"
		},
		"AzureSqlDW3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDW3'"
		},
		"AzureStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorage'"
		},
		"AzureStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorage1'"
		},
		"AzureStorageDatabricks_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureStorageDatabricks'"
		},
		"CosmosDb_DBTODOLIST_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb_DBTODOLIST'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"localfilesystem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'localfilesystem'"
		},
		"onpremSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onpremSqlServer'"
		},
		"perf_AmazonS3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'perf_AmazonS3'"
		},
		"AzureDataLakeGen2_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"AzureDataLakeGen2_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "onprem"
		},
		"DestinationDataset_hh7_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DestinationDataset_hh7_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "source"
		},
		"HackCopy_Destination_AzureBlob_0t1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "openhackdemo"
		},
		"HackCopy_Destination_AzureBlob_7s6_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "perf/hybriddatamover"
		},
		"HackCopy_Destination_AzureBlob_hn6_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "source"
		},
		"HackCopy_Destination_AzureBlob_icl_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "perf/hybriddatamover"
		},
		"HackCopy_Destination_AzureBlob_jvu_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "documents"
		},
		"HackCopy_Destination_AzureBlob_nhg_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "perf/hybriddatamover"
		},
		"HackCopy_Destination_AzureBlob_p07_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adfjobs"
		},
		"HackCopy_Destination_AzureBlob_pee_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "documents"
		},
		"HackCopy_Destination_AzureBlob_suk_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "test"
		},
		"HackCopy_Destination_AzureBlob_tzx_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "vincts123"
		},
		"HackCopy_Destination_FileShare_5i0_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "dump"
		},
		"HackCopy_Destination_FileShare_8kb_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "dump"
		},
		"HackCopy_Destination_FileShare_i21_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "eric"
		},
		"HackCopy_Destination_FileShare_ixx_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "_success"
		},
		"HackCopy_Destination_FileShare_ixx_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"HackCopy_Destination_FileShare_w0x_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "dump"
		},
		"HackCopy_Source_FileShare_5i0_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Product.csv"
		},
		"HackCopy_Source_FileShare_5i0_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"HackCopy_Source_FileShare_7s6_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "dump"
		},
		"HackCopy_Source_FileShare_jvu_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "data mover tool.zip"
		},
		"HackCopy_Source_FileShare_jvu_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"HackCopy_Source_FileShare_suk_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "data.zip"
		},
		"HackCopy_Source_FileShare_suk_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": ""
		},
		"SourceDataset_hh7_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "Code"
		},
		"ADLS_Gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakegen2abnarain.dfs.core.windows.net"
		},
		"AzureDataLakeGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakegen2abnarain.dfs.core.windows.net"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "fareast\\abnarain"
		},
		"localfilesystem_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "fareast\\abnarain"
		},
		"perf_AmazonS3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAJFJFS2R57CYTWG4A"
		},
		"ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "lab-server.database.windows.net"
		},
		"ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "abhishek"
		},
		"ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_6lp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_6lp",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_6lp",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.tableName}"
										},
										{
											"name": "Destination",
											"value": "@{item().destination.tableName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlSource"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": false,
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_6lp",
											"type": "DatasetReference",
											"parameters": {
												"cw_structure": "@item().source.structure",
												"cw_tableName": "@item().source.tableName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_6lp",
											"type": "DatasetReference",
											"parameters": {
												"cw_structure": "@item().destination.structure",
												"cw_tableName": "@item().destination.tableName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"structure": [
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "FirstName",
											"type": "String"
										},
										{
											"name": "MiddleName",
											"type": "String"
										},
										{
											"name": "LastName",
											"type": "String"
										},
										{
											"name": "Gender",
											"type": "String"
										},
										{
											"name": "DateOfBirth",
											"type": "DateTime"
										},
										{
											"name": "City",
											"type": "String"
										},
										{
											"name": "ZipCode",
											"type": "String"
										},
										{
											"name": "Longitude",
											"type": "Double"
										},
										{
											"name": "Latitude",
											"type": "Double"
										},
										{
											"name": "Notes",
											"type": "String"
										},
										{
											"name": "CreditRating",
											"type": "Double"
										},
										{
											"name": "XCode",
											"type": "String"
										},
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "TelephoneNumber",
											"type": "String"
										},
										{
											"name": "Street1",
											"type": "String"
										},
										{
											"name": "Street2",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Client]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "FirstName",
											"type": "String"
										},
										{
											"name": "MiddleName",
											"type": "String"
										},
										{
											"name": "LastName",
											"type": "String"
										},
										{
											"name": "Gender",
											"type": "String"
										},
										{
											"name": "DateOfBirth",
											"type": "DateTime"
										},
										{
											"name": "CreditRating",
											"type": "Double"
										},
										{
											"name": "XCode",
											"type": "String"
										},
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "TelephoneNumber",
											"type": "String"
										},
										{
											"name": "Street1",
											"type": "String"
										},
										{
											"name": "Street2",
											"type": "String"
										},
										{
											"name": "City",
											"type": "String"
										},
										{
											"name": "ZipCode",
											"type": "String"
										},
										{
											"name": "Longitude",
											"type": "Double"
										},
										{
											"name": "Latitude",
											"type": "Double"
										},
										{
											"name": "Notes",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Client]')]"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"ClientId": "ClientId",
											"FirstName": "FirstName",
											"MiddleName": "MiddleName",
											"LastName": "LastName",
											"Gender": "Gender",
											"DateOfBirth": "DateOfBirth",
											"CreditRating": "CreditRating",
											"XCode": "XCode",
											"OccupationId": "OccupationId",
											"TelephoneNumber": "TelephoneNumber",
											"Street1": "Street1",
											"Street2": "Street2",
											"City": "City",
											"ZipCode": "ZipCode",
											"Longitude": "Longitude",
											"Latitude": "Latitude",
											"Notes": "Notes"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "OccupationName",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Occupation]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "OccupationName",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Occupation]')]"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OccupationId": "OccupationId",
											"OccupationName": "OccupationName"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "OrderDate",
											"type": "DateTime"
										},
										{
											"name": "OrderTotal",
											"type": "Decimal"
										},
										{
											"name": "OrderStatus",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Order]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "OrderDate",
											"type": "DateTime"
										},
										{
											"name": "OrderTotal",
											"type": "Decimal"
										},
										{
											"name": "OrderStatus",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Order]')]"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OrderId": "OrderId",
											"ClientId": "ClientId",
											"OrderDate": "OrderDate",
											"OrderTotal": "OrderTotal",
											"OrderStatus": "OrderStatus"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "LineNumber",
											"type": "Int32"
										},
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "Qty",
											"type": "Decimal"
										},
										{
											"name": "LineTotal",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[OrderLine]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "LineNumber",
											"type": "Int32"
										},
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "Qty",
											"type": "Decimal"
										},
										{
											"name": "LineTotal",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[OrderLine]')]"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OrderId": "OrderId",
											"LineNumber": "LineNumber",
											"ProductId": "ProductId",
											"Qty": "Qty",
											"LineTotal": "LineTotal"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "ProductName",
											"type": "String"
										},
										{
											"name": "Price",
											"type": "Decimal"
										},
										{
											"name": "Active",
											"type": "Boolean"
										},
										{
											"name": "Stock",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[Product]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "ProductName",
											"type": "String"
										},
										{
											"name": "Price",
											"type": "Decimal"
										},
										{
											"name": "Active",
											"type": "Boolean"
										},
										{
											"name": "Stock",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[Product]')]"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"ProductId": "ProductId",
											"ProductName": "ProductName",
											"Price": "Price",
											"Active": "Active",
											"Stock": "Stock"
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6lp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_6lp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_hh7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_hh7",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Code/"
							},
							{
								"name": "Destination",
								"value": "source/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_hh7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_hh7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_hh7')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_hh7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_xxj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_xxj",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_xxj",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.tableName}"
										},
										{
											"name": "Destination",
											"value": "@{item().destination.tableName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlSource"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": false,
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@item().copySink.preCopyScript",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "AzureStorage1",
												"type": "LinkedServiceReference"
											},
											"path": "documents"
										},
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_xxj",
											"type": "DatasetReference",
											"parameters": {
												"cw_structure": "@item().source.structure",
												"cw_tableName": "@item().source.tableName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_xxj",
											"type": "DatasetReference",
											"parameters": {
												"cw_structure": "@item().destination.structure",
												"cw_tableName": "@item().destination.tableName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"structure": [
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "FirstName",
											"type": "String"
										},
										{
											"name": "MiddleName",
											"type": "String"
										},
										{
											"name": "LastName",
											"type": "String"
										},
										{
											"name": "Gender",
											"type": "String"
										},
										{
											"name": "DateOfBirth",
											"type": "DateTime"
										},
										{
											"name": "CreditRating",
											"type": "Double"
										},
										{
											"name": "XCode",
											"type": "String"
										},
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "TelephoneNumber",
											"type": "String"
										},
										{
											"name": "Street1",
											"type": "String"
										},
										{
											"name": "Street2",
											"type": "String"
										},
										{
											"name": "City",
											"type": "String"
										},
										{
											"name": "ZipCode",
											"type": "String"
										},
										{
											"name": "Longitude",
											"type": "Double"
										},
										{
											"name": "Latitude",
											"type": "Double"
										},
										{
											"name": "Notes",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Client]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "FirstName",
											"type": "String"
										},
										{
											"name": "MiddleName",
											"type": "String"
										},
										{
											"name": "LastName",
											"type": "String"
										},
										{
											"name": "Gender",
											"type": "String"
										},
										{
											"name": "DateOfBirth",
											"type": "DateTime"
										},
										{
											"name": "CreditRating",
											"type": "Double"
										},
										{
											"name": "XCode",
											"type": "String"
										},
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "TelephoneNumber",
											"type": "String"
										},
										{
											"name": "Street1",
											"type": "String"
										},
										{
											"name": "Street2",
											"type": "String"
										},
										{
											"name": "City",
											"type": "String"
										},
										{
											"name": "ZipCode",
											"type": "String"
										},
										{
											"name": "Longitude",
											"type": "Double"
										},
										{
											"name": "Latitude",
											"type": "Double"
										},
										{
											"name": "Notes",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Client]')]"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Client]', 'U') IS NULL CREATE TABLE [dbo].[Client] ([ClientId] int,\n[FirstName] varchar(40),\n[MiddleName] varchar(40),\n[LastName] varchar(40),\n[Gender] char(1),\n[DateOfBirth] datetime,\n[CreditRating] float,\n[XCode] char(7),\n[OccupationId] int,\n[TelephoneNumber] varchar(20),\n[Street1] varchar(100),\n[Street2] varchar(100),\n[City] varchar(100),\n[ZipCode] varchar(15),\n[Longitude] float,\n[Latitude] float,\n[Notes] varchar(8000));\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"ClientId": "ClientId",
											"FirstName": "FirstName",
											"MiddleName": "MiddleName",
											"LastName": "LastName",
											"Gender": "Gender",
											"DateOfBirth": "DateOfBirth",
											"CreditRating": "CreditRating",
											"XCode": "XCode",
											"OccupationId": "OccupationId",
											"TelephoneNumber": "TelephoneNumber",
											"Street1": "Street1",
											"Street2": "Street2",
											"City": "City",
											"ZipCode": "ZipCode",
											"Longitude": "Longitude",
											"Latitude": "Latitude",
											"Notes": "Notes"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "OccupationName",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Occupation]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OccupationId",
											"type": "Int32"
										},
										{
											"name": "OccupationName",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Occupation]')]"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Occupation]', 'U') IS NULL CREATE TABLE [dbo].[Occupation] ([OccupationId] int,\n[OccupationName] varchar(60));\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OccupationId": "OccupationId",
											"OccupationName": "OccupationName"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "OrderDate",
											"type": "DateTime"
										},
										{
											"name": "OrderTotal",
											"type": "Decimal"
										},
										{
											"name": "OrderStatus",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Order]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "ClientId",
											"type": "Int32"
										},
										{
											"name": "OrderDate",
											"type": "DateTime"
										},
										{
											"name": "OrderTotal",
											"type": "Decimal"
										},
										{
											"name": "OrderStatus",
											"type": "String"
										}
									],
									"tableName": "[concat('[', 'dbo].[Order]')]"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Order]', 'U') IS NULL CREATE TABLE [dbo].[Order] ([OrderId] int,\n[ClientId] int,\n[OrderDate] datetime,\n[OrderTotal] decimal(18,2),\n[OrderStatus] char(1));\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OrderId": "OrderId",
											"ClientId": "ClientId",
											"OrderDate": "OrderDate",
											"OrderTotal": "OrderTotal",
											"OrderStatus": "OrderStatus"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "LineNumber",
											"type": "Int32"
										},
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "Qty",
											"type": "Decimal"
										},
										{
											"name": "LineTotal",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[OrderLine]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "OrderId",
											"type": "Int32"
										},
										{
											"name": "LineNumber",
											"type": "Int32"
										},
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "Qty",
											"type": "Decimal"
										},
										{
											"name": "LineTotal",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[OrderLine]')]"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[OrderLine]', 'U') IS NULL CREATE TABLE [dbo].[OrderLine] ([OrderId] int,\n[LineNumber] int,\n[ProductId] int,\n[Qty] decimal(18,3),\n[LineTotal] decimal(18,2));\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"OrderId": "OrderId",
											"LineNumber": "LineNumber",
											"ProductId": "ProductId",
											"Qty": "Qty",
											"LineTotal": "LineTotal"
										}
									}
								}
							},
							{
								"source": {
									"structure": [
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "ProductName",
											"type": "String"
										},
										{
											"name": "Price",
											"type": "Decimal"
										},
										{
											"name": "Active",
											"type": "Boolean"
										},
										{
											"name": "Stock",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[Product]')]"
								},
								"destination": {
									"structure": [
										{
											"name": "ProductId",
											"type": "Int32"
										},
										{
											"name": "ProductName",
											"type": "String"
										},
										{
											"name": "Price",
											"type": "Decimal"
										},
										{
											"name": "Active",
											"type": "Boolean"
										},
										{
											"name": "Stock",
											"type": "Decimal"
										}
									],
									"tableName": "[concat('[', 'dbo].[Product]')]"
								},
								"copySink": {
									"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Product]', 'U') IS NULL CREATE TABLE [dbo].[Product] ([ProductId] int,\n[ProductName] varchar(80),\n[Price] smallmoney,\n[Active] bit,\n[Stock] decimal(18,3));\n"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"columnMappings": {
											"ProductId": "ProductId",
											"ProductName": "ProductName",
											"Price": "Price",
											"Active": "Active",
											"Stock": "Stock"
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_xxj')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_xxj')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_09u')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Client] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_09u",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Client]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Client]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Client]', 'U') IS NULL CREATE TABLE [dbo].[Client] ([ClientId] int,\n[FirstName] varchar(40),\n[MiddleName] varchar(40),\n[LastName] varchar(40),\n[Gender] char(1),\n[DateOfBirth] datetime,\n[City] varchar(100),\n[ZipCode] varchar(15),\n[Longitude] float,\n[Latitude] float,\n[Notes] varchar(8000),\n[CreditRating] float,\n[XCode] char(7),\n[OccupationId] int,\n[TelephoneNumber] varchar(20),\n[Street1] varchar(100),\n[Street2] varchar(100));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_09u",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_09u",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_09u')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_09u')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_0t1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adfsingapore/0001e073-3e00-4758-a3e0-ef360cfc038e/ (perf_AmazonS3) → openhackdemo/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_0t1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfsingapore/0001e073-3e00-4758-a3e0-ef360cfc038e/"
							},
							{
								"name": "Destination",
								"value": "openhackdemo/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AmazonS3Object_0t1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_0t1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AmazonS3Object_0t1')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_0t1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_1b1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → Product (CosmosDb_DBTODOLIST)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_1b1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_1b1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_DocumentDbCollection_1b1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_1b1')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_DocumentDbCollection_1b1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_2ua')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → [dbo].[DimOrganization] (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_2ua",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[DimOrganization]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_2ua",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_2ua",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_2ua')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_2ua')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_3yq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_3yq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Product]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_3yq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_3yq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_3yq')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_3yq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_47x')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → Product (CosmosDb_DBTODOLIST)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_47x",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_47x",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_DocumentDbCollection_47x",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_47x')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_DocumentDbCollection_47x')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_5i0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "/Product.csv (FileServer1) → dump/ (localfilesystem)",
				"activities": [
					{
						"name": "HackCopy_Copy_5i0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/Product.csv"
							},
							{
								"name": "Destination",
								"value": "dump/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_FileShare_5i0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_FileShare_5i0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_FileShare_5i0')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_FileShare_5i0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_5qj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_5qj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Occupation]', 'U') IS NULL CREATE TABLE [dbo].[Occupation] ([OccupationId] int,\n[OccupationName] varchar(60));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_5qj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_5qj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_5qj')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_5qj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_7s6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "dump/ (localfilesystem) → perf/hybriddatamover/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_7s6",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dump/"
							},
							{
								"name": "Destination",
								"value": "perf/hybriddatamover/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_FileShare_7s6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_7s6",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_FileShare_7s6')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_7s6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_7xn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Client] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_7xn",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Client]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Client]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_7xn",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_7xn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_7xn')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_7xn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_88d')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → Items (CosmosDb_DBTODOLIST)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_88d",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "Items"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_88d",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_DocumentDbCollection_88d",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_88d')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_DocumentDbCollection_88d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_8kb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → dump/ (localfilesystem)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_8kb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "dump/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_8kb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_FileShare_8kb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_8kb')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_FileShare_8kb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_e3c')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_e3c",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_e3c",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_e3c",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_e3c')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_e3c')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_hn6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "perf-eastus/tb/sub0/ (perf_AmazonS3) → source/ (AzureStorage1)",
				"activities": [
					{
						"name": "HackCopy_Copy_hn6",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "perf-eastus/tb/sub0/"
							},
							{
								"name": "Destination",
								"value": "source/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AmazonS3Object_hn6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_hn6",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AmazonS3Object_hn6')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_hn6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_i21')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → eric/ (localfilesystem)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_i21",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "eric/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_i21",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_FileShare_i21",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_i21')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_FileShare_i21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_icl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Client] (onpremSqlServer) → perf/hybriddatamover/ (AzureStorage)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_icl",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Client]')]"
							},
							{
								"name": "Destination",
								"value": "perf/hybriddatamover/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_icl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_icl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_icl')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_icl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_iku')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → Items (CosmosDb_DBTODOLIST)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_iku",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "Items"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_iku",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_DocumentDbCollection_iku",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_iku')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_DocumentDbCollection_iku')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_ixx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Order] (onpremSqlServer) → /_success (FileServer1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_ixx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Order]')]"
							},
							{
								"name": "Destination",
								"value": "/_success"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_ixx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_FileShare_ixx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_ixx')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_FileShare_ixx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_j4k')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[OrderLine] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_j4k",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[OrderLine]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[OrderLine]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[OrderLine]', 'U') IS NULL CREATE TABLE [dbo].[OrderLine] ([OrderId] int,\n[LineNumber] int,\n[ProductId] int,\n[Qty] decimal(18,3),\n[LineTotal] decimal(18,2));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_j4k",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_j4k",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_j4k')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_j4k')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_jqe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_jqe",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_jqe",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_jqe",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_jqe')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_jqe')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_jvu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "/data mover tool.zip (localfilesystem) → documents/ (AzureStorage1)",
				"activities": [
					{
						"name": "HackCopy_Copy_jvu",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/data mover tool.zip"
							},
							{
								"name": "Destination",
								"value": "documents/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_FileShare_jvu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_jvu",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_FileShare_jvu')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_jvu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_ml5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (AzureSqlDW3) → Items (CosmosDb_DBTODOLIST)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_ml5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "Items"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AzureSqlDWTable_ml5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_DocumentDbCollection_ml5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AzureSqlDWTable_ml5')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_DocumentDbCollection_ml5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_mye')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_mye",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Product]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Product]', 'U') IS NULL CREATE TABLE [dbo].[Product] ([ProductId] int,\n[ProductName] varchar(80),\n[Price] smallmoney,\n[Active] bit,\n[Stock] decimal(18,3));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_mye",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_mye",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_mye')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_mye')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_nhg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "perf-eastus/tb/sub0/ (perf_AmazonS3) → perf/hybriddatamover/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_nhg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "perf-eastus/tb/sub0/"
							},
							{
								"name": "Destination",
								"value": "perf/hybriddatamover/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AmazonS3Object_nhg",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_nhg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AmazonS3Object_nhg')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_nhg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_p07')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adfcopye2etest/amazons3.donottouch/ (perf_AmazonS3) → adfjobs/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_p07",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfcopye2etest/amazons3.donottouch/"
							},
							{
								"name": "Destination",
								"value": "adfjobs/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AmazonS3Object_p07",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_p07",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AmazonS3Object_p07')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_p07')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_pee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → documents/ (AzureStorage1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_pee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "documents/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_pee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_pee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_pee')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_pee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_pjc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → [dbo].[DimGeography] (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_pjc",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[DimGeography]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_pjc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_pjc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_pjc')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_pjc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_pjq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → [dbo].[Occupation] (AzureSqlDW3)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_pjq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_pjq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_pjq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_pjq')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_pjq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_psg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → [dbo].[DimPromotion] (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_psg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[DimPromotion]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_psg",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_psg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_psg')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_psg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_rql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → / (AzureSqlDW3)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_rql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Product]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Product]', 'U') IS NULL CREATE TABLE [dbo].[Product] ([ProductId] int,\n[ProductName] varchar(80),\n[Price] smallmoney,\n[Active] bit,\n[Stock] decimal(18,3));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_rql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_rql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_rql')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_rql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_suk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "/data.zip (localfilesystem) → test/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_suk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/data.zip"
							},
							{
								"name": "Destination",
								"value": "test/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_FileShare_suk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_suk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_FileShare_suk')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_suk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_tzx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "perf-eastus/tb/sub0/ (perf_AmazonS3) → vincts123/ (AzureStorageDatabricks)",
				"activities": [
					{
						"name": "HackCopy_Copy_tzx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "perf-eastus/tb/sub0/"
							},
							{
								"name": "Destination",
								"value": "vincts123/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_AmazonS3Object_tzx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_tzx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_AmazonS3Object_tzx')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureBlob_tzx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_x81')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_x81",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Occupation]', 'U') IS NULL CREATE TABLE [dbo].[Occupation] ([OccupationId] int,\n[OccupationName] varchar(60));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_x81",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_x81",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HackCopy_Source_SqlServerTable_x81')]",
				"[concat(variables('factoryId'), '/datasets/HackCopy_Destination_AzureSqlDWTable_x81')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSIS Control Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stop Activity",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/7b68d2b5-dfbe-46e1-938f-98ed143b7953/resourceGroups/7b68d2b5-dfbe-46e1-938f-98ed143b7953/providers/Microsoft.DataFactory/factories/7b68d2b5-dfbe-46e1-938f-98ed143b7953/integrationRuntimes/ssis-ir/stop?api-version=2018-06-01",
							"method": "GET",
							"headers": {
								"Content-Type": "application/json"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": "[parameters('AzureDataLakeGen2_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('AzureDataLakeGen2_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_6lp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_structure": {
						"type": "Array"
					},
					"cw_tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"structure": {
					"value": "@dataset().cw_structure",
					"type": "Expression"
				},
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_hh7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "[parameters('DestinationDataset_hh7_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DestinationDataset_hh7_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_xxj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_structure": {
						"type": "Array"
					},
					"cw_tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"structure": {
					"value": "@dataset().cw_structure",
					"type": "Expression"
				},
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_0t1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_0t1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_7s6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_7s6_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_hn6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_hn6_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_icl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_icl_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_jvu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_jvu_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_nhg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_nhg_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_p07')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_p07_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_pee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_pee_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_suk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_suk_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureBlob_tzx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageDatabricks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_AzureBlob_tzx_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_09u')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Client]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_2ua')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[DimOrganization]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_3yq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_5qj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_7xn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Client]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_e3c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_j4k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[OrderLine]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_jqe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_mye')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_pjc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[DimGeography]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_pjq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_psg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[DimPromotion]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_rql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_AzureSqlDWTable_x81')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_DocumentDbCollection_1b1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_DBTODOLIST",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_DBTODOLIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_DocumentDbCollection_47x')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_DBTODOLIST",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_DBTODOLIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_DocumentDbCollection_88d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_DBTODOLIST",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "Items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_DBTODOLIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_DocumentDbCollection_iku')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_DBTODOLIST",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "Items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_DBTODOLIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_DocumentDbCollection_ml5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb_DBTODOLIST",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DocumentDbCollection",
				"typeProperties": {
					"collectionName": "Items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb_DBTODOLIST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_FileShare_5i0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Destination_FileShare_5i0_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_FileShare_8kb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('HackCopy_Destination_FileShare_8kb_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_FileShare_i21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('HackCopy_Destination_FileShare_i21_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_FileShare_ixx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('HackCopy_Destination_FileShare_ixx_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('HackCopy_Destination_FileShare_ixx_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Destination_FileShare_w0x')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": false,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('HackCopy_Destination_FileShare_w0x_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AmazonS3Object_0t1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "perf_AmazonS3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AmazonS3Object",
				"typeProperties": {
					"key": "",
					"prefix": "0001e073-3e00-4758-a3e0-ef360cfc038e/",
					"bucketName": "adfsingapore"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/perf_AmazonS3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AmazonS3Object_hn6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "perf_AmazonS3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AmazonS3Object",
				"typeProperties": {
					"key": "",
					"prefix": "tb/sub0/",
					"bucketName": "perf-eastus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/perf_AmazonS3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AmazonS3Object_nhg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "perf_AmazonS3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AmazonS3Object",
				"typeProperties": {
					"key": "",
					"prefix": "tb/sub0/",
					"bucketName": "perf-eastus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/perf_AmazonS3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AmazonS3Object_p07')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "perf_AmazonS3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AmazonS3Object",
				"typeProperties": {
					"key": "",
					"prefix": "amazons3.donottouch/",
					"bucketName": "adfcopye2etest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/perf_AmazonS3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AmazonS3Object_tzx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "perf_AmazonS3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AmazonS3Object",
				"typeProperties": {
					"key": "",
					"prefix": "tb/sub0/",
					"bucketName": "perf-eastus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/perf_AmazonS3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_AzureSqlDWTable_ml5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDW3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDW3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_FileShare_5i0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": "[parameters('HackCopy_Source_FileShare_5i0_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('HackCopy_Source_FileShare_5i0_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_FileShare_7s6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "[parameters('HackCopy_Source_FileShare_7s6_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_FileShare_jvu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": "[parameters('HackCopy_Source_FileShare_jvu_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('HackCopy_Source_FileShare_jvu_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_FileShare_suk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": "[parameters('HackCopy_Source_FileShare_suk_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('HackCopy_Source_FileShare_suk_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_09u')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Client]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_1b1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_2ua')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_3yq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_47x')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_5qj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_7xn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Client]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_88d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_8kb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_e3c')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_i21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_icl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Client]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_iku')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_ixx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Order]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_j4k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[OrderLine]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_jqe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_mye')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_pee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_pjc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_pjq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_psg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_rql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Source_SqlServerTable_x81')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[Occupation]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6lp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_structure": {
						"type": "Array"
					},
					"cw_tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": {
					"value": "@dataset().cw_structure",
					"type": "Expression"
				},
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_hh7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localfilesystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "[parameters('SourceDataset_hh7_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localfilesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xxj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremSqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_structure": {
						"type": "Array"
					},
					"cw_tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": {
					"value": "@dataset().cw_structure",
					"type": "Expression"
				},
				"typeProperties": {
					"tableName": {
						"value": "@dataset().cw_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_Gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDW3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDW3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureStorageDatabricks_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb_DBTODOLIST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb_DBTODOLIST_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "\\\\ab-desktop\\data",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_IRForCopyDataTool')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_IRForCopyDataTool'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/localfilesystem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "\\\\ab-desktop\\DB backup",
					"userId": "[parameters('localfilesystem_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('localfilesystem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_IRForCopyDataTool')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_IRForCopyDataTool'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onpremSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_IRForCopyDataTool')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_IRForCopyDataTool'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/perf_AmazonS3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"accessKeyId": "[parameters('perf_AmazonS3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('perf_AmazonS3_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "HackCopy_Pipeline_0t1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-02-15T03:32:00.000Z",
						"endTime": "2019-02-16T04:32:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/HackCopy_Pipeline_0t1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_IRForCopyDataTool'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_ssis-ir'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US 2",
						"nodeSize": "Standard_D3_v2",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 2
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('ssis-ir_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "Basic"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		}
	]
}