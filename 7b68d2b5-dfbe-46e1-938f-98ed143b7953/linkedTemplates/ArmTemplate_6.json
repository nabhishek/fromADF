{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "7b68d2b5-dfbe-46e1-938f-98ed143b7953"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_pjc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → [dbo].[DimGeography] (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_pjc",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[DimGeography]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_pjc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_pjc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_pjq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → [dbo].[Occupation] (AzureSqlDW3)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_pjq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_pjq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_pjq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_psg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → [dbo].[DimPromotion] (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_psg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[DimPromotion]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_psg",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_psg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_rql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Product] (onpremSqlServer) → / (AzureSqlDW3)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_rql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Product]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Product]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Product]', 'U') IS NULL CREATE TABLE [dbo].[Product] ([ProductId] int,\n[ProductName] varchar(80),\n[Price] smallmoney,\n[Active] bit,\n[Stock] decimal(18,3));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_rql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_rql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_suk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "/data.zip (localfilesystem) → test/ (AzureStorage)",
				"activities": [
					{
						"name": "HackCopy_Copy_suk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/data.zip"
							},
							{
								"name": "Destination",
								"value": "test/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 16
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_FileShare_suk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureBlob_suk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HackCopy_Pipeline_x81')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "[concat('[', 'dbo].[Occupation] (onpremSqlServer) → / (AzureSqlDW1)')]",
				"activities": [
					{
						"name": "HackCopy_Copy_x81",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[Occupation]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": false,
								"writeBatchSize": 100000,
								"preCopyScript": "BEGIN TRY\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dbo') EXEC('Create Schema [dbo]');\nEND TRY\nBEGIN CATCH\nif ERROR_NUMBER() <> 2714 throw;\nEND CATCH\n\nIF OBJECT_ID('[dbo].[Occupation]', 'U') IS NULL CREATE TABLE [dbo].[Occupation] ([OccupationId] int,\n[OccupationName] varchar(60));\n"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "HackCopy_Source_SqlServerTable_x81",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HackCopy_Destination_AzureSqlDWTable_x81",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "HackCopy_Pipeline_0t1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-02-15T03:32:00.000Z",
						"endTime": "2019-02-16T04:32:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		}
	]
}